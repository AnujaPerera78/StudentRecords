/*
 * Displays the sum of certain elements in an array 
 * 
 * modified     20220331
 * date         20220331
 * @filename	AddElement.java
 * @author      Anuja Perera
 * @version     1.0
 * @see         ICS4U 2.2 Activity Sum Elements
 */

// Assumes user will at max enter 10 numbers
// Num input is always removeable 
// Can you enter repreated nums 
// NULL 
// Check Range of nums you can enter

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.*;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JButton;
import javax.swing.JTextField;
import javax.swing.JLabel;
import java.awt.Font;

public class AddElement extends javax.swing.JFrame {
	int count = 0;
	int ARRAY_LENGTH = 10;
	int[] numElms = new int[ARRAY_LENGTH];

	private ArrayList<String> names = new ArrayList<String>();

	public AddElement() {
		initComponents();
	}

	@SuppressWarnings("unchecked")

	private void initComponents() {

		lblTitle = new javax.swing.JLabel();
		lblTitle.setText("Integer Sums");
		lblName = new javax.swing.JLabel();
		txtNum = new javax.swing.JTextField();
		scpOutputArea = new javax.swing.JScrollPane();
		txtOutputArea = new javax.swing.JTextArea();
		txtOutputArea.setEditable(false);
		btnAdd = new javax.swing.JButton();
		btnRemove = new javax.swing.JButton();
		btnSumAll = new javax.swing.JButton();
		btnSumEven = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		lblTitle.setFont(new java.awt.Font("Tahoma", 0, 24));

		lblName.setFont(new java.awt.Font("Tahoma", 0, 14));
		lblName.setText("Enter Integer");

		txtOutputArea.setColumns(20);
		txtOutputArea.setRows(5);
		scpOutputArea.setViewportView(txtOutputArea);

		btnAdd.setText("Add");
		btnAdd.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnAddActionPerformed(evt);

				try {
					int newNum = Integer.parseInt(txtNum.getText());
					if (newNum < 0 || newNum > 1000000) {
						textSumField.setText("Enter numbers between 0-1000000");
					} else {
						numElms[count] = newNum;
						count++;
					}

					printArray();

				} catch (NumberFormatException ex) {
					textSumField.setText("Enter numbers in correct format");
				}

			}

		});

		btnRemove.setText("Remove");
		btnRemove.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnRemoveActionPerformed(evt);

				int newNum = Integer.parseInt(txtNum.getText());

				boolean run = true;
				if (count == 1) {
					txtOutputArea.setText(" ");
					run = false;
					count--;
				}
				if (count == 0) {
					textSumField.setText("No numbers to remove");
				}
				if (run) {
					for (int i = 0; i < ARRAY_LENGTH; i++) {
						if (newNum == numElms[i]) {
							numElms[i] = 0;
							count--;
						}

					}
					printArray();
				}

				int total = 0;

				for (int i = 0; i < count; i++) {
					total += numElms[i];

				}

				if ((numElms[0]) * count == total) {
					txtOutputArea.setText(" ");
					count = 0;
				}

			}
		});

		btnSumAll.setText("Sum All");
		btnSumAll.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnListActionPerformed(evt);

				int total = 0;

				for (int i = 0; i < count; i++) {
					total += numElms[i];

				}
				textSumField.setText("The sum of all numbers: " + total);

			}
		});

		btnSumEven.setText("Sum Even");
		btnSumEven.addActionListener(new java.awt.event.ActionListener() {

			@Override
			public void actionPerformed(ActionEvent arg0) {

				int total = 0;

				for (int i = 0; i < count; i++) {
					if (numElms[i] % 2 == 0) {
						total += numElms[i];
					}
				}
				textSumField.setText("Sum of all even: " + total);
			}

		});

		JButton btnSumOdd = new JButton("Sum Odd");
		btnSumOdd.addActionListener(new java.awt.event.ActionListener() {

			public void actionPerformed(ActionEvent arg0) {

				int total = 0;
				for (int i = 0; i < count; i++) {
					if (numElms[i] % 2 != 0) {
						total += numElms[i];
					}
				}
				textSumField.setText("The sum of all odd: " + total);
			}

		});

		JButton btnExit = new JButton("Exit");
		btnExit.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		btnExit.addActionListener(new ActionListener() {

			public void actionPerformed(ActionEvent e) {
				System.exit(0);
			}
		});

		textSumField = new JTextField();
		textSumField.setEditable(false);
		textSumField.setColumns(10);

		JLabel lblOutput = new JLabel("Output");
		lblOutput.setFont(new Font("Tahoma", Font.PLAIN, 13));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		layout.setHorizontalGroup(layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addGap(128).addComponent(lblTitle).addContainerGap(137,
						Short.MAX_VALUE))
				.addGroup(layout.createSequentialGroup().addGap(31).addGroup(layout
						.createParallelGroup(Alignment.LEADING)
						.addGroup(layout.createSequentialGroup().addComponent(lblName).addGap(18).addComponent(txtNum,
								GroupLayout.PREFERRED_SIZE, 233, GroupLayout.PREFERRED_SIZE))
						.addGroup(layout.createSequentialGroup()
								.addGroup(layout.createParallelGroup(Alignment.TRAILING).addGroup(layout
										.createSequentialGroup()
										.addComponent(scpOutputArea, GroupLayout.PREFERRED_SIZE, 175,
												GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(ComponentPlacement.RELATED, 95, Short.MAX_VALUE))
										.addGroup(layout.createSequentialGroup()
												.addGroup(layout.createParallelGroup(Alignment.LEADING)
														.addComponent(lblOutput).addComponent(textSumField,
																GroupLayout.PREFERRED_SIZE, 251,
																GroupLayout.PREFERRED_SIZE))
												.addGap(18)))
								.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
										.addComponent(btnExit, 0, 0, Short.MAX_VALUE)
										.addComponent(btnSumOdd, 0, 0, Short.MAX_VALUE)
										.addComponent(btnRemove, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)
										.addComponent(btnAdd, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)
										.addComponent(btnSumAll, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)
										.addComponent(btnSumEven, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE))
								.addGap(10)))
						.addGap(18)));
		layout.setVerticalGroup(layout.createParallelGroup(Alignment.LEADING).addGroup(layout.createSequentialGroup()
				.addContainerGap().addComponent(lblTitle).addGap(18)
				.addGroup(layout.createParallelGroup(Alignment.BASELINE).addComponent(lblName).addComponent(txtNum,
						GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
				.addPreferredGap(ComponentPlacement.UNRELATED)
				.addGroup(layout.createParallelGroup(Alignment.LEADING).addGroup(layout.createSequentialGroup()
						.addComponent(scpOutputArea, GroupLayout.PREFERRED_SIZE, 189, GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(ComponentPlacement.RELATED).addComponent(lblOutput)
						.addPreferredGap(ComponentPlacement.RELATED)
						.addComponent(textSumField, GroupLayout.PREFERRED_SIZE, 29, GroupLayout.PREFERRED_SIZE))
						.addGroup(layout.createSequentialGroup().addComponent(btnAdd)
								.addPreferredGap(ComponentPlacement.RELATED).addComponent(btnRemove).addGap(35)
								.addComponent(btnSumAll).addPreferredGap(ComponentPlacement.RELATED)
								.addComponent(btnSumEven).addPreferredGap(ComponentPlacement.RELATED)
								.addComponent(btnSumOdd).addPreferredGap(ComponentPlacement.RELATED)
								.addComponent(btnExit)))
				.addContainerGap(33, Short.MAX_VALUE)));
		getContentPane().setLayout(layout);

		pack();
	}

	private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {

		String temp;
		temp = txtNum.getText();
		names.add(temp);
	}

	private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {

		String temp;
		temp = txtNum.getText();
		names.remove(temp);
	}

	private void btnListActionPerformed(java.awt.event.ActionEvent evt) {

		String a;
		String temp = "";
		Iterator stepper = names.iterator();
		while (stepper.hasNext()) {
			a = (String) stepper.next();
			temp = temp + a + "\n";
		}
		txtOutputArea.setText(temp);
	}

	public void printArray() {
		String output = "";
		String temp = "";
		for (int i = 0; i < ARRAY_LENGTH; i++) {
			if (numElms[i] != 0) {
				output = (temp + numElms[i] + "\n");
				temp = output;
				txtOutputArea.setText(output);
			}
		}

	}

	public static void main(String args[]) {

		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(AddElement.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(AddElement.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(AddElement.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(AddElement.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		}

		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new AddElement().setVisible(true);
			}
		});

	}

	private javax.swing.JButton btnAdd;
	private javax.swing.JButton btnSumEven;
	private javax.swing.JButton btnSumAll;
	private javax.swing.JButton btnRemove;
	private javax.swing.JLabel lblName;
	private javax.swing.JLabel lblTitle;
	private javax.swing.JScrollPane scpOutputArea;
	private javax.swing.JTextArea txtOutputArea;
	private javax.swing.JTextField txtNum;
	private JTextField textSumField;
}
